classdef GCStation
    properties
        received_drones
        acknowledged_drones
    end

    methods
        function gcStation = GCStation()
            gcStation.received_drones = {};
            gcStation.acknowledged_drones = {};
        end

        function gcStation = send_acks(gcStation)
            unacknowledged_ids = []
            for drone = gcStation.received_drones
                if ismember(droacknowledged_ids)
            received_ids = [gcStation.received_drones.ID];
            acknowledged_ids = [gcStation.acknowledged_drones.ID];        
            unacknowledged_ids = setdiff(received_ids, acknowledged_ids);
        
            for id = unacknowledged_ids
                drone = gcStation.received_drones([gcStation.received_drones.ID] == id);        
                drone.receive_ack();
                gcStation.acknowledged_drones = [gcStation.acknowledged_drones, drone];
            end
        end

        function gcStation = receive_incoming_data(gcStation, transmitting_drones)
            number_drones_attempting_to_transmit = length(transmitting_drones);
            if number_drones_attempting_to_transmit == 0
                disp('Idle slot detected.');
            elseif number_drones_attempting_to_transmit > 1
                disp('Collision detected.');
            elseif number_drones_attempting_to_transmit == 1
                drone = transmitting_drones(1);
                gcStation.received_drones = [gcStation.received_drones, drone];
                disp(['ID packet successfully received from Drone ', drone.ID, '.']);
            end
        end
    end
end


